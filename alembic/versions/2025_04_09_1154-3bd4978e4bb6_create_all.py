"""create all

Revision ID: 3bd4978e4bb6
Revises:
Create Date: 2025-04-09 11:54:07.938822

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3bd4978e4bb6"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admins",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("lastname", sa.String(), nullable=False),
        sa.Column("number", sa.String(length=20), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("number"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "cities",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=50), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "state",
            sa.Enum(
                "positive",
                "default",
                "negative",
                "blackList",
                name="stateclient",
            ),
            server_default="Обычный",
            nullable=False,
        ),
        sa.Column(
            "form",
            sa.Enum("agree", "disagree", name="userform"),
            server_default="Несогласен",
            nullable=False,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "clients",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("lastname", sa.String(length=30), nullable=False),
        sa.Column("patronymic", sa.String(length=30), nullable=True),
        sa.Column(
            "state",
            sa.Enum(
                "positive",
                "default",
                "negative",
                "blackList",
                name="stateclient",
            ),
            nullable=False,
        ),
        sa.Column("number", sa.String(length=20), nullable=True),
        sa.Column("city_id", sa.Integer(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("number"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "couriers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "name", sa.String(length=30), server_default="-", nullable=True
        ),
        sa.Column(
            "lastname", sa.String(length=20), server_default="-", nullable=True
        ),
        sa.Column(
            "number", sa.String(length=20), server_default="-", nullable=True
        ),
        sa.Column("city_id", sa.Integer(), server_default="-", nullable=True),
        sa.Column(
            "order_counter", sa.Integer(), server_default="0", nullable=True
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "kitchens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id", sa.BigInteger(), server_default="-", nullable=False
        ),
        sa.Column(
            "title", sa.String(length=30), server_default="-", nullable=True
        ),
        sa.Column("description", sa.Text(), server_default="-", nullable=True),
        sa.Column(
            "number", sa.String(length=20), server_default="-", nullable=True
        ),
        sa.Column(
            "address", sa.String(length=30), server_default="-", nullable=True
        ),
        sa.Column("city_id", sa.Integer(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "state_order",
            sa.Enum(
                "request",
                "inTheReview",
                "prepared",
                "courierInform",
                "inTheWay",
                "delivered",
                "cancelled",
                name="stateorder",
            ),
            nullable=False,
        ),
        sa.Column("client_id", sa.Integer(), nullable=True),
        sa.Column("courier_id", sa.Integer(), nullable=True),
        sa.Column(
            "delivery_time",
            sa.String(length=30),
            server_default="Ближайшее",
            nullable=False,
        ),
        sa.Column(
            "address", sa.String(length=40), server_default="-", nullable=False
        ),
        sa.Column(
            "payment_type",
            sa.Enum("inCash", "byCard", name="paymenttype"),
            nullable=True,
        ),
        sa.Column("change_amount", sa.Integer(), nullable=True),
        sa.Column(
            "order_price", sa.Integer(), server_default="0", nullable=True
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["courier_id"],
            ["couriers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "products",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("owned_id", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=30), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("img", sa.String(length=150), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["owned_id"],
            ["kitchens.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_product_association",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), server_default="1", nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "order_id", "product_id", name="idx_unique_kitchen_city"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_product_association")
    op.drop_table("products")
    op.drop_table("orders")
    op.drop_table("kitchens")
    op.drop_table("couriers")
    op.drop_table("clients")
    op.drop_table("users")
    op.drop_table("cities")
    op.drop_table("admins")
    # ### end Alembic commands ###
